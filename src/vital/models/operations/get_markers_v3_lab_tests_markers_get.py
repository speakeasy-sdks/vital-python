"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import getmarkersresponse as shared_getmarkersresponse
from typing import Optional


@dataclasses.dataclass
class GetMarkersV3LabTestsMarkersGetRequest:
    lab_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'lab_id', 'style': 'form', 'explode': True }})
    r"""The identifier Vital assigned to a lab partner."""
    name: Optional[str] = dataclasses.field(default='', metadata={'query_param': { 'field_name': 'name', 'style': 'form', 'explode': True }})
    r"""The name of an individual biomarker or a panel. Used as a fuzzy filter when searching markers."""
    page: Optional[int] = dataclasses.field(default=1, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    size: Optional[int] = dataclasses.field(default=50, metadata={'query_param': { 'field_name': 'size', 'style': 'form', 'explode': True }})
    



@dataclasses.dataclass
class GetMarkersV3LabTestsMarkersGetResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    get_markers_response: Optional[shared_getmarkersresponse.GetMarkersResponse] = dataclasses.field(default=None)
    r"""Successful Response"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

