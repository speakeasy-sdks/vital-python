"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import connectionstatus as shared_connectionstatus
from ...models.shared import emailproviderauthlink as shared_emailproviderauthlink
from enum import Enum
from typing import Optional

class EmailProvidersThatRequireEmailsFreestyleAuth(str, Enum):
    r"""An enumeration."""
    FREESTYLE_LIBRE = 'freestyle_libre'


@dataclasses.dataclass
class ConnectEmailAuthProviderV2LinkProviderEmailProviderPostRequest:
    email_provider_auth_link: shared_emailproviderauthlink.EmailProviderAuthLink = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    provider: EmailProvidersThatRequireEmailsFreestyleAuth = dataclasses.field(metadata={'path_param': { 'field_name': 'provider', 'style': 'simple', 'explode': False }})
    r"""An enumeration."""
    



@dataclasses.dataclass
class ConnectEmailAuthProviderV2LinkProviderEmailProviderPostResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    connection_status: Optional[shared_connectionstatus.ConnectionStatus] = dataclasses.field(default=None)
    r"""Successful Response"""
    

