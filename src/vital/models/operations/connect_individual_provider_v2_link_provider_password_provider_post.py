"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import individualproviderdata as shared_individualproviderdata
from ..shared import providerlinkresponse as shared_providerlinkresponse
from enum import Enum
from typing import Optional

class ConnectIndividualProviderV2LinkProviderPasswordProviderPostProviderPasswordProviders(str, Enum):
    r"""An enumeration."""
    WHOOP = 'whoop'
    RENPHO = 'renpho'
    PELOTON = 'peloton'
    ZWIFT = 'zwift'
    EIGHT_SLEEP = 'eight_sleep'
    BEURER_API = 'beurer_api'
    DEXCOM = 'dexcom'
    HAMMERHEAD = 'hammerhead'
    MY_FITNESS_PAL = 'my_fitness_pal'



@dataclasses.dataclass
class ConnectIndividualProviderV2LinkProviderPasswordProviderPostRequest:
    individual_provider_data: shared_individualproviderdata.IndividualProviderData = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    provider: ConnectIndividualProviderV2LinkProviderPasswordProviderPostProviderPasswordProviders = dataclasses.field(metadata={'path_param': { 'field_name': 'provider', 'style': 'simple', 'explode': False }})
    r"""An enumeration."""
    x_vital_link_client_region: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'x-vital-link-client-region', 'style': 'simple', 'explode': False }})
    




@dataclasses.dataclass
class ConnectIndividualProviderV2LinkProviderPasswordProviderPostResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    provider_link_response: Optional[shared_providerlinkresponse.ProviderLinkResponse] = dataclasses.field(default=None)
    r"""Successful Response"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

