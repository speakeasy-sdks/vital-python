"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import date, datetime
from typing import Optional
from vital import utils


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ClientFacingActivityHeartRate:
    r"""Heart rate daily summary."""
    avg_bpm: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avg_bpm'), 'exclude': lambda f: f is None }})
    r"""Average heart rate::bpm"""
    max_bpm: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_bpm'), 'exclude': lambda f: f is None }})
    r"""Maximum heart rate::bpm"""
    min_bpm: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('min_bpm'), 'exclude': lambda f: f is None }})
    r"""Minimum heart rate::bpm"""
    resting_bpm: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resting_bpm'), 'exclude': lambda f: f is None }})
    r"""Resting heart rate::bpm"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ClientFacingActivitySource:
    r"""Source summarizes where a sample or a summary is sourced from.
    At minimum, the source provider is always included.
    """
    logo: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logo') }})
    r"""Deprecated.

    Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
    """
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Deprecated.

    Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
    """
    provider: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provider') }})
    r"""Provider slug. e.g., `oura`, `fitbit`, `garmin`."""
    slug: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slug') }})
    r"""Deprecated.

    Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
    """
    app_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('app_id'), 'exclude': lambda f: f is None }})
    r"""The identifier of the app which recorded this summary. This is only applicable to multi-source providers like Apple Health and Android Health Connect."""
    type: Optional[str] = dataclasses.field(default='unknown', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the data source (app or device) by which the summary or the timeseries data were recorded. This defaults to `unknown` when Vital cannot extract or infer that information"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ClientFacingActivity:
    calendar_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('calendar_date'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat }})
    r"""Date of the summary in the YYYY-mm-dd format."""
    date_: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    r"""Date of the specified record, formatted as ISO8601 datetime string in UTC 00:00. Deprecated in favour of calendar_date.

    Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
    """
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    source: ClientFacingActivitySource = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source') }})
    r"""Source the data has come from."""
    user_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_id') }})
    r"""User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api."""
    calories_active: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('calories_active'), 'exclude': lambda f: f is None }})
    r"""Energy consumption caused by the physical activity of the day in kilocalories::kilocalories"""
    calories_total: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('calories_total'), 'exclude': lambda f: f is None }})
    r"""Total energy consumption during the day including Basal Metabolic Rate in kilocalories::kilocalories"""
    daily_movement: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('daily_movement'), 'exclude': lambda f: f is None }})
    r"""Deprecated. Daily physical activity as equal meters i.e. amount of walking needed to get the same amount of activity::meters

    Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
    """
    distance: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('distance'), 'exclude': lambda f: f is None }})
    r"""Distance traveled during activities throughout the day::meters"""
    floors_climbed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('floors_climbed'), 'exclude': lambda f: f is None }})
    r"""Number of floors climbed by the user::count"""
    heart_rate: Optional[ClientFacingActivityHeartRate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('heart_rate'), 'exclude': lambda f: f is None }})
    r"""Heart rate daily summary."""
    high: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('high'), 'exclude': lambda f: f is None }})
    r"""Number of minutes during the day with high intensity activity (e.g. running)::minutes"""
    low: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('low'), 'exclude': lambda f: f is None }})
    r"""Number of minutes during the day with low intensity activity (e.g. household work)::minutes"""
    medium: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('medium'), 'exclude': lambda f: f is None }})
    r"""Number of minutes during the day with medium intensity activity (e.g. walking)::minutes"""
    steps: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('steps'), 'exclude': lambda f: f is None }})
    r"""Total number of steps registered during the day::steps"""
    time_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time_zone'), 'exclude': lambda f: f is None }})
    r"""[DEPRECATED] The time zone full identifier for the data. Example: 'Europe/London'."""
    timezone_offset: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timezone_offset'), 'exclude': lambda f: f is None }})
    r"""Timezone offset from UTC as seconds. For example, EEST (Eastern European Summer Time, +3h) is 10800. PST (Pacific Standard Time, -8h) is -28800::seconds"""
    

